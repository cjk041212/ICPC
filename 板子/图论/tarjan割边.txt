tarjan割边

int dfn[maxn], low[maxn], dfncnt, fat[maxn], bridgecnt, isbridge[maxn];
void tarjan(int u, int fa) {
	dfn[u] = low[u] = ++dfncnt;
	fat[u] = fa;
	for (int i = head[u]; i; i = e[i].next) {
		int v = e[i].to;
		if (!dfn[v]) {
			tarjan(v, u);
			low[u] = min(low[u], low[v]);
			if (low[v] > dfn[u]) {
				isbridge[v] = 1;//割边v和fat[v]
				++bridgecnt;
			}
		}
		else if (dfn[v] < dfn[u] && v != fa)
			low[u] = min(low[u], dfn[v]);
	}
}