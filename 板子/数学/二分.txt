//二分

//满足check的最小点
while(l < r)
	{
		int mid = (l + r)/ 2;
		if(check())r = mid;  // 这里是 r = mid, 说明[l,mid]是合法范围
		else l = mid + 1;   //  [l,mid]这个范围都不是合法范围，所以下一次查找直接从 l = mid + 1开始了
	} 		

//满足check的最大点
while(l < r)
	{
		int mid = (l + r + 1)/ 2;  // 这里要 l + r +1 要不然会死循环
		if(check())l = mid;         // mid这个位置 满足条件之后 查找 [mid , right]的位置， 所以l移到mid的位置
		else r = mid - 1;     // [mid,r] 不满足条件， 所以要移到满足条件的一方， r = mid - 1 
	} 
	//最后的l,r是答案 因为 l == r
