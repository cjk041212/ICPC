//hierhozer欧拉路

#include<bits/stdc++.h>
using namespace std;

const int N=505,M=1050;
struct Node{
	int v,id;
	Node(){}
	Node(int a,int b):v(a),id(b){}
};
int n,m,beg[N],deg[N];
bool vis[M];
vector<Node>G[N];
stack<int>st;
bool cmp(Node a,Node b){
	return a.id<b.id;
}

void hierholzer(int u){
	for(int i=beg[u];i<G[u].size();i++){
		int v=G[u][i].v,id=G[u][i].id;
		if(!vis[id]){
			vis[id]=1;
			hierholzer(v);
		}
	}
	st.push(u);
}
int main(){
	ios::sync_with_stdio(false);
	cin.tie(0);
	cin>>m;
	for(int i=1;i<=m;i++){
		int u,v;cin>>u>>v;
		n=max({n,u,v});
		G[u].push_back(Node(v,i));
		G[v].push_back(Node(u,i));
		deg[u]++,deg[v]++;
	}
	for(int i=1;i<=n;i++)sort(G[i].begin(),G[i].end(),cmp);
	int s=1;
	for(int i=1;i<=n;i++){
		if(deg[i]%2){s=i;break;}
	}
	hierholzer(s);
	while(!st.empty()){
		cout<<st.top()<<endl;
		st.pop();
	}
}