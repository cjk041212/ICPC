//组合数

//n比较小
ll fac[maxn], invfac[maxn];
ll inv(ll x) { return ksm(x, mod - 2); }
ll C(ll a, ll b) {
	if (a < 0 || b < 0 || a < b)return 0;
	return fac[a] * invfac[b] % mod * invfac[a - b] % mod;
}
void init() {
	fac[0] = fac[1] = 1;
	for (int i = 2; i < maxn; i++)fac[i] = fac[i - 1] * i % mod;
	invfac[maxn - 1] = inv(fac[maxn - 1]);
	for (int i = maxn - 2; i >= 0; i--)invfac[i] = invfac[i + 1] * (i + 1) % mod;
}


//n比较大
ll inv[N];
ll C(int a, int b) {
    if (a < 0 || b < 0 || a < b)return 0;
    ll res = 1;
    for (int i = b, j = a; i >= 1; i--, j--) {
        res = res * j % mod * inv[i] % mod;
    }
    return res;
}
void init() {
    for (int i = N - 1; i; i--)inv[i] = ksm(i, mod - 2);
}