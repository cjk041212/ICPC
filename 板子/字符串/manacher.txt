//manacher

int n, P[N << 1];
char a[N], S[N << 1];

void manacher() {
	n = strlen(a);
	int k = 0; S[k++] = '$'; S[k++] = '#';
	for (int i = 0; i < n; i++) { S[k++] = a[i]; S[k++] = '#'; }
	S[k++] = '&'; n = k;

	int R = 0, C;
	for (int i = 1; i < n; i++) {
		if (i < R)P[i] = min(P[(C << 1) - i], P[C] + C - i);
		else P[i] = 1;
		while (S[i + P[i]] == S[i - P[i]])P[i]++;
		if (P[i] + i > R) {
			R = P[i] + i;
			C = i;
		}
	}
}
void solve() {
	cin >> a;
	manacher();
	int ans = 0;
	for (int i = 1; i < n; i++)ans = max(ans, P[i]);
	cout << ans - 1 << endl;

}