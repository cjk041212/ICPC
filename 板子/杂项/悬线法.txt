//悬线法

void solve()
{
	int n,m;cin>>n>>m;
	ll ans=0;
	vector<vector<int>>res(n+5,vector<int>(m+5)),
	lft(n+5,vector<int>(m+5)),rft(n+5,vector<int>(m+5)),
	up(n+5,vector<int>(m+5));
	
	for(int i=1;i<=n;i++)
	for(int j=1;j<=m;j++){
		char ch;cin>>ch;
		res[i][j]=(ch=='F');
		lft[i][j]=rft[i][j]=j;
		up[i][j]=1;	
	}
	for(int i=1;i<=n;i++){
		for(int j=2;j<=m;j++){
			if(res[i][j]==res[i][j-1]&&res[i][j])
			lft[i][j]=lft[i][j-1];
		}
		for(int j=m-1;j;j--){
			if(res[i][j]==res[i][j+1]&&res[i][j])
			rft[i][j]=rft[i][j+1];
		}
	}
	for(int i=1;i<=n;i++){
		for(int j=1;j<=m;j++){
			if(i>1&&res[i][j]==res[i-1][j]&&res[i][j]){
				lft[i][j]=max(lft[i][j],lft[i-1][j]);
				rft[i][j]=min(rft[i][j],rft[i-1][j]);
				up[i][j]=up[i-1][j]+1;
			}
			if(res[i][j])
			ans=max(ans,1LL*(rft[i][j]-lft[i][j]+1)*up[i][j]);
			
		}
	}
	cout<<ans*3<<endl;
}

signed main()
{
    ios::sync_with_stdio(false);
    cin.tie(0); cout.tie(0);
    int t = 1;
    while (t--)solve();
}