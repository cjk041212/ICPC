//树状数组

int a[maxn], tr[maxn], n;
void insert(int x, int val) {
	while (x <= n) {
		tr[x] += val;
		x += lowbit(x);
	}
}
int query(int x) {
	int res = 0;
	while(x){
		res += tr[x];
		x -= lowbit(x);
	}
	return res;
}
void solve() {
	cin >> n;
	for (int i = 1; i <= n; i++)tr[i] = 0;
	for (int i = 1; i <= n; i++)cin >> a[i], insert(i, a[i]);
	string s; 
	while (cin >> s && s[0] != 'E') {
		int i, j; cin >> i >> j;
		if (s[0] == 'A')insert(i, j);
		else if (s[0] == 'S')insert(i, -j);
		else cout << query(j) - query(i - 1) << endl;
	}
	
}